plugins {
	id 'fabric-loom' version '0.12-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

configurations {
	includeTransitive
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	mavenCentral()
	maven {
		name "m2-dv8tion"
		url "https://m2.dv8tion.net/releases"
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
		//exclude group: "net.fabricmc.fabric-api"

	// Uncomment the following line to enable the deprecated Fabric API modules. 
	// These are included in the Fabric API production distribution and allow you to update your mod to the latest modules at a later more convenient time.
	modImplementation("net.fabricmc:fabric-language-kotlin:1.8.1+kotlin.1.7.0")
	// modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"
	include implementation("com.googlecode.json-simple:json-simple:1.1.1")
	include implementation("com.neovisionaries:nv-websocket-client:2.14")
	include implementation("com.squareup.okio:okio:2.8.0")
	include implementation('com.squareup.okhttp3:okhttp:4.9.0')
	include implementation("net.sf.trove4j:trove4j:3.0.3")
	include implementation("org.apache.commons:commons-collections4:4.1")
	include implementation("com.fasterxml.jackson.core:jackson-databind:2.10.1")
	include implementation("com.fasterxml.jackson.core:jackson-annotations:2.10.1")
	include implementation("com.fasterxml.jackson.core:jackson-core:2.10.1")
	include implementation('net.dv8tion:JDA:4.4.0_350') {
		exclude module: 'opus-java'
	}

}
/*
configurations.getByName("includeTransitive").resolvedConfiguration.resolvedArtifacts.forEach(dep -> {
	if (!dep.id.componentIdentifier.displayName.contains("slf4j-api"))
		dependencies.add("include", dep.id.componentIdentifier.displayName)
})
*/


processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
